<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:pen="http://www.pentaho.com/xml/schemas/pentaho-blueprint"
           xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://www.pentaho.com/xml/schemas/pentaho-blueprint http://www.pentaho.com/xml/schemas/pentaho-blueprint.xsd">

  <bean id="jobEntryHadoopCopyFiles" class="org.pentaho.big.data.kettle.plugins.hdfs.job.JobEntryHadoopCopyFiles" scope="prototype">
    <argument ref="namedClusterService"/>
    <argument ref="runtimeTestActionService"/>
    <argument ref="runtimeTester"/>
    <pen:di-plugin type="org.pentaho.di.core.plugins.JobEntryPluginType"/>
  </bean>
  <bean id="hadoopFileInputMeta" class="org.pentaho.big.data.kettle.plugins.hdfs.trans.HadoopFileInputMeta" scope="prototype">
    <argument ref="namedClusterService"/>
    <argument ref="runtimeTestActionService"/>
    <argument ref="runtimeTester"/>
    <pen:di-plugin type="org.pentaho.di.core.plugins.StepPluginType"/>
  </bean>
  <bean id="hadoopFileOutputMeta" class="org.pentaho.big.data.kettle.plugins.hdfs.trans.HadoopFileOutputMeta" scope="prototype">
    <argument ref="namedClusterService"/>
    <argument ref="runtimeTestActionService"/>
    <argument ref="runtimeTester"/>
    <pen:di-plugin type="org.pentaho.di.core.plugins.StepPluginType"/>
  </bean>
  <bean id="hdfsLifecycleListener" class="org.pentaho.big.data.kettle.plugins.hdfs.HdfsLifecycleListener">
    <argument ref="namedClusterService"/>
    <argument ref="runtimeTestActionService"/>
    <argument ref="runtimeTester"/>
    <pen:di-plugin type="org.pentaho.di.core.plugins.LifecyclePluginType"/>
  </bean>

  <reference id="namedClusterService" interface="org.pentaho.hadoop.shim.api.cluster.NamedClusterService"/>
  <reference id="runtimeTester" interface="org.pentaho.runtime.test.RuntimeTester"/>
  <reference id="runtimeTestActionService" interface="org.pentaho.runtime.test.action.RuntimeTestActionService"/>


  <bean id="MetaverseGraphImpl" class="org.pentaho.metaverse.api.model.BaseSynchronizedGraphFactory" factory-method="open">
    <argument>
      <map>
        <entry key="blueprints.graph" value="com.tinkerpop.blueprints.impls.tg.TinkerGraph"/>
      </map>
    </argument>
  </bean>

  <bean id="IMetaverseBuilder" class="org.pentaho.metaverse.api.model.BaseMetaverseBuilder" scope="singleton">
    <argument ref="MetaverseGraphImpl"/>
  </bean>

  <!-- HadoopFileInput External Resource Consumer -->
  <bean id="hadoopFileInputERC" scope="singleton"
        class="org.pentaho.big.data.kettle.plugins.hdfs.trans.analyzer.HadoopFileInputExternalResourceConsumer"/>

  <!-- HadoopFileOutput External Resource Consumer -->
  <bean id="hadoopFileOutputERC" scope="singleton"
        class="org.pentaho.big.data.kettle.plugins.hdfs.trans.analyzer.HadoopFileOutputExternalResourceConsumer"/>

  <!-- HadoopFileInput Step Analyzer -->
  <bean id="HadoopFileInputStepAnalyzer" class="org.pentaho.big.data.kettle.plugins.hdfs.trans.analyzer.HadoopFileInputStepAnalyzer">
    <property name="externalResourceConsumer" ref="hadoopFileInputERC"/>
  </bean>
  <service id="hadoopFileInputStepAnalyzerService"
           interface="org.pentaho.metaverse.api.analyzer.kettle.step.IStepAnalyzer"
           ref="HadoopFileInputStepAnalyzer"/>

  <!-- HadoopFileOutput Step Analyzer -->
  <bean id="HadoopFileOutputStepAnalyzer" class="org.pentaho.big.data.kettle.plugins.hdfs.trans.analyzer.HadoopFileOutputStepAnalyzer">
    <property name="externalResourceConsumer" ref="hadoopFileOutputERC"/>
  </bean>
  <service id="hadoopFileOutputStepAnalyzerService"
           interface="org.pentaho.metaverse.api.analyzer.kettle.step.IStepAnalyzer"
           ref="HadoopFileOutputStepAnalyzer"/>
</blueprint>
