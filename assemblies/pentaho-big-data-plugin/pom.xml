<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>pentaho</groupId>
    <artifactId>pentaho-big-data-assemblies</artifactId>
    <version>11.1.0.0-1</version>
  </parent>
  <artifactId>pentaho-big-data-plugin</artifactId>
  <version>11.1.0.0-1</version>
  <packaging>pom</packaging>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@github.com:${github.user}/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:${github.user}/${project.artifactId}.git</developerConnection>
    <url>scm:git:git@github.com:${github.user}/${project.artifactId}.git</url>
  </scm>

  <!-- Default properties (used when no specific variant profile is active) -->
  <properties>
    <hadoop.shim.artifactId>pentaho-hadoop-shims-apache</hadoop.shim.artifactId>
    <hadoop.shim.destFileName>apache</hadoop.shim.destFileName>
    <plugin.classifier>-apache</plugin.classifier>
    <active.hadoop.configuration>apache</active.hadoop.configuration>
  </properties>

  <profiles>

    <!-- Profile for Apache variant -->
    <profile>
      <id>apache</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <hadoop.shim.artifactId>pentaho-hadoop-shims-apache</hadoop.shim.artifactId>
        <hadoop.shim.destFileName>apache</hadoop.shim.destFileName>
        <plugin.classifier>-apache</plugin.classifier>
        <active.hadoop.configuration>apache</active.hadoop.configuration>
        <assembly.id>apache</assembly.id>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.pentaho.hadoop.shims</groupId>
          <artifactId>pentaho-hadoop-shims-apache</artifactId>
          <version>${project.version}</version>
          <type>zip</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>pkg-apache</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile for HDI variant -->
    <profile>
      <id>hdi</id>
      <properties>
        <hadoop.shim.artifactId>pentaho-hadoop-shims-hdi40</hadoop.shim.artifactId>
        <hadoop.shim.destFileName>hdi40</hadoop.shim.destFileName>
        <plugin.classifier>-hdi</plugin.classifier>
        <active.hadoop.configuration>hdi40</active.hadoop.configuration>
        <assembly.id>hdi</assembly.id>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.pentaho.hadoop.shims</groupId>
          <artifactId>pentaho-hadoop-shims-hdi40</artifactId>
          <version>${project.version}</version>
          <type>zip</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>pkg-hdi</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile for EMR variant -->
    <profile>
      <id>emr</id>
      <properties>
        <hadoop.shim.artifactId>pentaho-hadoop-shims-emr770</hadoop.shim.artifactId>
        <hadoop.shim.destFileName>emr770</hadoop.shim.destFileName>
        <plugin.classifier>-emr</plugin.classifier>
        <active.hadoop.configuration>emr770</active.hadoop.configuration>
        <assembly.id>emr</assembly.id>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.pentaho.hadoop.shims</groupId>
          <artifactId>pentaho-hadoop-shims-emr770</artifactId>
          <version>${project.version}</version>
          <type>zip</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>pkg-emr</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile for Dataproc variant -->
    <profile>
      <id>dataproc</id>
      <properties>
        <hadoop.shim.artifactId>pentaho-hadoop-shims-dataproc1421</hadoop.shim.artifactId>
        <hadoop.shim.destFileName>dataproc1421</hadoop.shim.destFileName>
        <plugin.classifier>-dataproc</plugin.classifier>
        <active.hadoop.configuration>dataproc1421</active.hadoop.configuration>
        <assembly.id>dataproc</assembly.id>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.pentaho.hadoop.shims</groupId>
          <artifactId>pentaho-hadoop-shims-dataproc1421</artifactId>
          <version>${project.version}</version>
          <type>zip</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>pkg-dataproc</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile for CDP variant -->
    <profile>
      <id>cdp</id>
      <properties>
        <hadoop.shim.artifactId>pentaho-hadoop-shims-cdpdc71</hadoop.shim.artifactId>
        <hadoop.shim.destFileName>cdpdc71</hadoop.shim.destFileName>
        <plugin.classifier>-cdp</plugin.classifier>
        <active.hadoop.configuration>cdpdc71</active.hadoop.configuration>
        <assembly.id>cdp</assembly.id>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.pentaho.hadoop.shims</groupId>
          <artifactId>pentaho-hadoop-shims-cdpdc71</artifactId>
          <version>${project.version}</version>
          <type>zip</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>pkg-cdp</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Profile for ApacheVanilla variant -->
    <profile>
      <id>apachevanilla</id>
      <properties>
        <hadoop.shim.artifactId>pentaho-hadoop-shims-apachevanilla</hadoop.shim.artifactId>
        <hadoop.shim.destFileName>apachevanilla</hadoop.shim.destFileName>
        <plugin.classifier>-apachevanilla</plugin.classifier>
        <active.hadoop.configuration>apachevanilla</active.hadoop.configuration>
        <assembly.id>apachevanilla</assembly.id>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.pentaho.hadoop.shims</groupId>
          <artifactId>pentaho-hadoop-shims-apachevanilla</artifactId>
          <version>${project.version}</version>
          <type>zip</type>
          <scope>provided</scope>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>pkg-apachevanilla</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


  </profiles>

  <dependencyManagement>
    <dependencies>
      <!-- SLF4J logging for PDI non-OSGi plugins should rely on the jars being provided in data-integration/lib -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j2-impl</artifactId>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-reload4j</artifactId>
      <version>1.7.36</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-kettle-plugins-browse</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-api-runtimeTest</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-impl-cluster</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-kettle-plugins-common-ui</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-kettle-plugins-common-job</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>shim-api-core</artifactId>
      <version>${pentaho-hadoop-shims.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.hadoop.shims</groupId>
      <artifactId>pentaho-hadoop-shims-common-base</artifactId>
      <version>${pentaho-hadoop-shims.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-vfs2-hdfs</artifactId>
      <version>${commons-vfs2.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-authentication-mapper-impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho.hadoop.shims</groupId>
      <artifactId>pentaho-hadoop-shims-common-dependencies</artifactId>
      <version>${pentaho-hadoop-shims.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-impl-clusterTests</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-authentication-mapper-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-services-api</artifactId>
      <version>${pentaho-hadoop-shims.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-mapreduce</artifactId>
      <version>${pentaho-hadoop-shims.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>hadoop-cluster-ui</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-legacy-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-legacy</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-legacy-amazon-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-impl-vfs-hdfs-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>services-bootstrap</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.oozie</groupId>
      <artifactId>oozie-client</artifactId>
      <version>${dependency.oozie.revision}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.oozie</groupId>
      <artifactId>oozie-core</artifactId>
      <version>${dependency.oozie.revision}</version>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-iam</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.amazonaws</groupId>
          <artifactId>jmespath-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-cbor</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
        <exclusion>
          <groupId>software.amazon.ion</groupId>
          <artifactId>ion-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-emr</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.amazonaws</groupId>
          <artifactId>jmespath-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-pricing</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.amazonaws</groupId>
          <artifactId>jmespath-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-s3</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.amazonaws</groupId>
          <artifactId>aws-java-sdk-kms</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.amazonaws</groupId>
          <artifactId>jmespath-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${dependency.joda-time.revision}</version>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${org.apache.avro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.core</groupId>
      <artifactId>commands</artifactId>
      <version>${dependency.commands.revision}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.equinox</groupId>
      <artifactId>common</artifactId>
      <version>${dependency.common.revision}</version>
    </dependency>
    <dependency>
      <groupId>com.github.stephenc.high-scale-lib</groupId>
      <artifactId>high-scale-lib</artifactId>
      <version>${dependency.high-scale-lib.revision}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jets3t</groupId>
      <artifactId>jets3t</artifactId>
      <version>${dependency.jets3t.revision}</version>
    </dependency>
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>${dependency.jline.revision}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>libthrift</artifactId>
      <version>${org.apache.thrift.version}</version>
    </dependency>
    <dependency>
      <groupId>xmlpull</groupId>
      <artifactId>xmlpull</artifactId>
      <version>${dependency.xmlpull.revision}</version>
    </dependency>
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3_min</artifactId>
      <version>${dependency.xpp3.revision}</version>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-pig-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-sqoop-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-hbase-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-mapreduce-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-hive-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-formats-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-hdfs-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-sqoop-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-oozie-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-spark-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-legacy-amazon-plugin</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-assemblies-pmr-libraries</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <classifier>plugin</classifier>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-plugin-samples</artifactId>
      <version>${project.version}</version>
      <type>zip</type>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <configuration>
            <descriptors>
              <descriptor>${basedir}/src/main/assembly/descriptors/plugin.xml</descriptor>
            </descriptors>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-interpolation</artifactId>
              <version>1.26</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.pentaho.hadoop.shims</groupId>
                  <artifactId>${hadoop.shim.artifactId}</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/hadoop-configurations</outputDirectory>
                  <destFileName>${hadoop.shim.destFileName}</destFileName>
                </artifactItem>
                <!-- Plugins unpack -->
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-pig-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-hbase-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-hdfs-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-sqoop-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-oozie-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-spark-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-mapreduce-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-hive-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-formats-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pdi-legacy-amazon-plugin</artifactId>
                  <type>zip</type>
                  <outputDirectory>${basedir}/target/plugins/pentaho-big-data-plugin/plugins</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Copy and filter assembly resources -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-assembly-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/filtered-assembly-resources</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/assembly/resources</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*.properties</include>
                  </includes>
                </resource>
                <resource>
                  <directory>src/main/assembly/resources</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>**/*.properties</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
